{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Anix",
  "scopeName": "source.anix",
  "fileTypes": ["anix"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#directives" },
    { "include": "#js-commands" },
    { "include": "#script-blocks" },
    { "include": "#tags-with-selectors" },
    { "include": "#inline-links" },
    { "include": "#void-tags" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#brackets" },
    { "include": "#braces" },
    { "include": "#template-directive" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.anix",
          "match": "//.*$"
        },
        {
          "name": "comment.line.hash.anix",
          "match": "#.*$"
        },
        {
          "name": "comment.line.triple-hash.anix",
          "match": "###.*$"
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "keyword.control.include.anix",
          "match": "^\\s*include\\s+\"([^\"]+)\"\\s*;?",
          "captures": {
            "1": { "name": "string.quoted.double.anix" }
          }
        },
        {
          "name": "keyword.control.importjs.anix",
          "match": "^\\s*importjs\\s+([\\w.\\/\\\\-]+)\\s*:\\s*([\\w$]+)\\(([^)]*)\\);?$",
          "captures": {
            "1": { "name": "string.unquoted.path.anix" },
            "2": { "name": "entity.name.function.anix" },
            "3": { "name": "variable.parameter.anix" }
          }
        },
        {
          "name": "keyword.control.page.anix",
          "match": "^\\s*page\\s*\\[\"([^\"]+)\",\\s*\"([^\"]+)\"\\]\\s*\\{",
          "captures": {
            "1": { "name": "string.quoted.double.title.anix" },
            "2": { "name": "string.quoted.double.url.anix" }
          }
        }
      ]
    },
    "template-directive": {
      "name": "meta.template.anix",
      "match": "\\{\\{\\s*([\\w$]+)\\s*\\}\\}",
      "captures": {
        "1": { "name": "entity.name.function.template.anix" }
      }
    },
    "js-commands": {
      "patterns": [
        {
          "name": "meta.js-command.anix",
          "begin": "(js:[a-zA-Z]+)\\(([^)]*)\\)\\s*\\{",
          "beginCaptures": {
            "1": { "name": "keyword.control.js-command.anix" },
            "2": { "name": "variable.parameter.js-selector.anix" }
          },
          "end": "\\}",
          "patterns": [{ "include": "source.js" }]
        },
        {
          "name": "meta.js-command-simple.anix",
          "match": "(js:[a-zA-Z]+)\\(([^)]*)\\)\\s*;?",
          "captures": {
            "1": { "name": "keyword.control.js-command.anix" },
            "2": { "name": "variable.parameter.js-selector.anix" }
          }
        }
      ]
    },
    "script-blocks": {
      "patterns": [
        {
          "name": "meta.script-block.anix",
          "begin": "^\\s*script\\s*\\{",
          "end": "\\}",
          "patterns": [{ "include": "source.js" }]
        },
        {
          "name": "meta.script-src.anix",
          "match": "^\\s*script\\s*\\(src\\s*[=:]\\s*\"([^\"]+)\"\\)\\s*$",
          "captures": {
            "1": { "name": "string.quoted.double.src.anix" }
          }
        },
        {
          "name": "meta.script-inline.anix",
          "match": "^\\s*script:\\s*(.*)$",
          "captures": {
            "1": { "name": "source.js.embedded.anix" }
          }
        }
      ]
    },
    "tags-with-selectors": {
      "patterns": [
        {
          "name": "meta.tag-with-attributes.anix",
          "match": "^\\s*([a-zA-Z0-9]+)(#[\\w-]+)?((?:\\.[\\w-]+)*)?(\\((?:[^()\"]|\"[^\"]*\")*\\))?(?:\\s*\"([^\"]*)\")?(?:\\s*\\{)?;?$",
          "captures": {
            "1": { "name": "entity.name.tag.anix" },
            "2": { "name": "entity.other.attribute-name.id.anix" },
            "3": { "name": "entity.other.attribute-name.class.anix" },
            "4": { "name": "meta.attribute-list.anix" },
            "5": { "name": "string.quoted.double.content.anix" }
          }
        }
      ]
    },
    "inline-links": {
      "name": "meta.inline-link.anix",
      "match": "^\\s*([a-zA-Z0-9]+)((?:\\.[\\w-]+)+)?\\s*\"([^\"]+)\"\\s*->\\s*\"([^\"]+)\";?$",
      "captures": {
        "1": { "name": "entity.name.tag.anix" },
        "2": { "name": "entity.other.attribute-name.class.anix" },
        "3": { "name": "string.quoted.double.text.anix" },
        "4": { "name": "string.quoted.double.url.anix" }
      }
    },
    "void-tags": {
      "name": "meta.void-tag.anix",
      "match": "^\\s*([a-zA-Z0-9]+)(#[\\w-]+)?((?:\\.[\\w-]+)*)?>(.*)<$",
      "captures": {
        "1": { "name": "entity.name.tag.anix" },
        "2": { "name": "entity.other.attribute-name.id.anix" },
        "3": { "name": "entity.other.attribute-name.class.anix" },
        "4": { "name": "meta.attribute-content.anix" }
      }
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.anix",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.anix", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.anix",
          "match": "\\b\\d+(?:\\.\\d+)?\\b"
        }
      ]
    },
    "brackets": {
      "patterns": [
        {
          "name": "punctuation.section.brackets.begin.anix",
          "match": "\\["
        },
        {
          "name": "punctuation.section.brackets.end.anix",
          "match": "\\]"
        }
      ]
    },
    "braces": {
      "patterns": [
        {
          "name": "punctuation.section.braces.begin.anix",
          "match": "\\{"
        },
        {
          "name": "punctuation.section.braces.end.anix",
          "match": "\\}"
        }
      ]
    },
    "attribute-content": {
      "patterns": [
        {
          "name": "entity.other.attribute-name.anix",
          "match": "\\b[a-zA-Z0-9-_]+\\b(?=\\s*[=:])"
        },
        {
          "name": "string.quoted.double.attribute-value.anix",
          "match": "\"[^\"]*\""
        }
      ]
    }
  },
  "uuid": "anix-tmlanguage-001"
}
